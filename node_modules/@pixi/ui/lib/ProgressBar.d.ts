import { Container } from '@pixi/display';
import { Graphics } from '@pixi/graphics';
type FillOffset = {
    x?: number;
    y?: number;
};
export type ProgressBarOptions = {
    bg: Container | string;
    fill: Container | string;
    progress?: number;
    fillOffset?: FillOffset;
};
/**
 * Creates a ProgressBar.
 * @example
 * new ProgressBar({
 *     bg: 'slider_bg.png',
 *     fill: 'slider.png',
 *     progress: 50,
 * });
 */
export declare class ProgressBar extends Container {
    protected bg: Container;
    protected fill: Container;
    protected fillMask: Graphics;
    protected progressStart: number;
    protected _progress: number;
    /** Container, that holds all inner views. */
    innerView: Container;
    constructor(params?: ProgressBarOptions);
    /**
     * Initialize ProgressBar.
     * @param root0
     * @param root0.bg - Background texture.
     * @param root0.fill - Fill texture.
     * @param root0.fillOffset - Fill offset.
     * @param root0.progress - Initial progress value.
     */
    init({ bg, fill, fillOffset, progress }: ProgressBarOptions): void;
    /**
     * Set bg.
     * @param bg
     */
    setBackground(bg: Container | string): void;
    /**
     * Set fill.
     * @param fill
     * @param fillOffset
     */
    setFill(fill: Container | string, fillOffset?: FillOffset): void;
    protected validate(progress: number): number;
    /** Set current progress percentage value. */
    set progress(progress: number);
    /** Return current progress percentage value. */
    get progress(): number;
}
export {};
//# sourceMappingURL=ProgressBar.d.ts.map