{"version":3,"file":"Select.mjs","sources":["../src/Select.ts"],"sourcesContent":["import { Container } from '@pixi/display';\nimport { Graphics } from '@pixi/graphics';\nimport { Text, TextStyle } from '@pixi/text';\nimport { Signal } from 'typed-signals';\nimport { FancyButton } from './FancyButton';\nimport { ScrollBox, ScrollBoxOptions } from './ScrollBox';\nimport { getView } from './utils/helpers/view';\n\nconst defaultVisibleItems = 5;\n\ntype Offset = {\n    y: number;\n    x: number;\n};\n\nexport type SelectItemsOptions = {\n    items: string[];\n    backgroundColor: number | string;\n    hoverColor?: number;\n    width?: number;\n    height?: number;\n    textStyle?: Partial<TextStyle>;\n    radius?: number;\n};\n\nexport type SelectOptions = {\n    closedBG: string | Container;\n    openBG: string | Container;\n    textStyle?: Partial<TextStyle>;\n    selected?: number;\n    selectedTextOffset?: { x?: number; y?: number };\n\n    items: SelectItemsOptions;\n\n    scrollBoxOffset?: { x?: number; y?: number };\n    scrollBoxWidth?: number;\n    scrollBoxHeight?: number;\n    scrollBoxRadius?: number;\n\n    visibleItems?: number;\n\n    scrollBox?: ScrollBoxOptions & {\n        offset?: Offset;\n    };\n};\n\n/**\n * Container-based component that gives us a selection dropdown.\n *\n * It is a composition of a {@link Button} and a {@link ScrollBox}.\n * @example\n * new Select({\n *     closedBG: `select_closed.png`,\n *     openBG: `select_open.png`,\n *     textStyle: { fill: 0xffffff, fontSize: 20 },\n *     items: {\n *         items,\n *         backgroundColor: 0x000000,\n *         hoverColor: 0x000000,\n *         width: 200,\n *         height: 50,\n *     },\n *     scrollBox: {\n *         width: 200,\n *         height: 350,\n *         radius: 30,\n *     },\n * });\n */\n\nexport class Select extends Container\n{\n    protected openButton!: FancyButton;\n    protected closeButton!: FancyButton;\n    protected openView!: Container;\n    protected scrollBox: ScrollBox;\n\n    /** Selected value ID. */\n    value: number;\n\n    /** Fires when selected value is changed. */\n    onSelect: Signal<(value: number, text: string) => void>;\n\n    constructor(options?: SelectOptions)\n    {\n        super();\n\n        this.onSelect = new Signal();\n\n        if (options)\n        {\n            this.init(options);\n        }\n    }\n\n    /**\n     * Initiates Select.\n     * @param root0\n     * @param root0.closedBG\n     * @param root0.textStyle\n     * @param root0.items\n     * @param root0.openBG\n     * @param root0.selected\n     * @param root0.selectedTextOffset\n     * @param root0.scrollBox\n     * @param root0.visibleItems\n     */\n    init({ closedBG, textStyle, items, openBG, selected, selectedTextOffset, scrollBox, visibleItems }: SelectOptions)\n    {\n        if (this.openView && this.openView !== openBG)\n        {\n            this.removeChild(this.openView);\n        }\n\n        // openButton\n        if (!this.openButton)\n        {\n            this.openButton = new FancyButton({\n                defaultView: getView(closedBG),\n                text: new Text(items?.items ? items.items[0] : '', textStyle),\n                textOffset: selectedTextOffset\n            });\n            this.openButton.onPress.connect(() => this.toggle());\n            this.addChild(this.openButton);\n        }\n        else\n        {\n            this.openButton.views = {\n                defaultView: getView(closedBG),\n                text: new Text(items?.items ? items.items[0] : '', textStyle)\n            };\n\n            this.openButton.textOffset = selectedTextOffset;\n        }\n\n        // openView\n        if (this.openView !== openBG)\n        {\n            this.openView = getView(openBG);\n            this.openView.visible = false;\n            this.addChild(this.openView);\n        }\n\n        // closeButton\n        if (!this.closeButton)\n        {\n            this.closeButton = new FancyButton({\n                defaultView: new Graphics()\n                    .beginFill(0x000000, 0.00001)\n                    .drawRect(0, 0, this.openButton.width, this.openButton.height),\n                text: new Text(items?.items ? items.items[0] : '', textStyle),\n                textOffset: selectedTextOffset\n            });\n            this.closeButton.onPress.connect(() => this.toggle());\n            this.openView.addChild(this.closeButton);\n        }\n        else\n        {\n            this.closeButton.views = {\n                defaultView: new Graphics()\n                    .beginFill(0x000000, 0.00001)\n                    .drawRect(0, 0, this.openButton.width, this.openButton.height),\n                text: new Text(items?.items ? items.items[0] : '', textStyle)\n            };\n\n            this.openButton.textOffset = selectedTextOffset;\n        }\n\n        // ScrollBox\n        if (!this.scrollBox)\n        {\n            this.scrollBox = new ScrollBox();\n\n            this.openView.addChild(this.scrollBox);\n        }\n        else\n        {\n            this.scrollBox.removeItems();\n        }\n\n        this.scrollBox.init({\n            type: 'vertical',\n            elementsMargin: 0,\n            width: this.openButton.width,\n            height: this.openButton.height * (visibleItems ?? defaultVisibleItems),\n            radius: 0,\n            padding: 0,\n            ...scrollBox\n        });\n\n        this.scrollBox.y = this.openButton.height;\n\n        if (scrollBox?.offset)\n        {\n            this.scrollBox.x = scrollBox.offset.x ?? 0;\n            this.scrollBox.y += scrollBox.offset.y ?? 0;\n        }\n\n        this.convertItemsToButtons(items).forEach((button, id) =>\n        {\n            const text = button.text;\n\n            if (id === selected)\n            {\n                this.openButton.text = text;\n                this.closeButton.text = text;\n            }\n\n            button.onPress.connect(() =>\n            {\n                this.value = id;\n                this.onSelect.emit(id, text);\n                this.openButton.text = text;\n                this.closeButton.text = text;\n                this.close();\n            });\n\n            this.scrollBox.addItem(button);\n        });\n    }\n\n    /** Toggle the select state (open if closed, closes - id open). */\n    toggle()\n    {\n        this.openView.visible = !this.openView.visible;\n        this.openButton.visible = !this.openButton.visible;\n    }\n\n    /** Show dropdown. */\n    open()\n    {\n        this.openView.visible = true;\n        this.openButton.visible = false;\n    }\n\n    /** Hide dropdown. */\n    close()\n    {\n        this.openView.visible = false;\n        this.openButton.visible = true;\n    }\n\n    protected convertItemsToButtons({\n        items,\n        backgroundColor,\n        hoverColor,\n        width,\n        height,\n        textStyle,\n        radius\n    }: SelectItemsOptions): FancyButton[]\n    {\n        const buttons: FancyButton[] = [];\n\n        items.forEach((item) =>\n        {\n            const defaultView = new Graphics().beginFill(backgroundColor).drawRoundedRect(0, 0, width, height, radius);\n\n            const color = hoverColor ?? backgroundColor;\n            const hoverView = new Graphics().beginFill(color).drawRoundedRect(0, 0, width, height, radius);\n\n            const text = new Text(item, textStyle);\n\n            const button = new FancyButton({ defaultView, hoverView, text });\n\n            buttons.push(button);\n        });\n\n        return buttons;\n    }\n}\n"],"names":[],"mappings":"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"}