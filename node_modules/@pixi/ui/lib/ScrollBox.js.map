{"version":3,"file":"ScrollBox.js","sources":["../src/ScrollBox.ts"],"sourcesContent":["import { Ticker } from '@pixi/core';\nimport { Container, DisplayObject } from '@pixi/display';\nimport { FederatedPointerEvent } from '@pixi/events';\nimport { Graphics } from '@pixi/graphics';\nimport { Sprite } from '@pixi/sprite';\nimport type { ListType } from './List';\nimport { List } from './List';\nimport ScrollSpring from './utils/trackpad/ScrollSpring';\nimport { Trackpad } from './utils/trackpad/Trackpad';\n\nexport type ScrollBoxOptions = {\n    type?: ListType;\n    background?: number | string;\n    width?: number;\n    height?: number;\n    radius?: number;\n    elementsMargin?: number;\n    items?: Container[];\n    disableDynamicRendering?: boolean;\n    vertPadding?: number;\n    horPadding?: number;\n    padding?: number;\n};\n\n/**\n * Scrollable view, for arranging lists of Pixi container-based elements.\n *\n * Items, that are out of the visible area, are not rendered.\n * @example\n * new ScrollBox({\n *     background: 0XFFFFFF,\n *     items: [\n *         new Graphics().beginFill(0x000000).drawRect(0, 0, 200, 50),\n *         new Graphics().beginFill(0x000000).drawRect(0, 0, 200, 50),\n *         new Graphics().beginFill(0x000000).drawRect(0, 0, 200, 50),\n *         new Graphics().beginFill(0x000000).drawRect(0, 0, 200, 50),\n *         new Graphics().beginFill(0x000000).drawRect(0, 0, 200, 50),\n *         new Graphics().beginFill(0x000000).drawRect(0, 0, 200, 50),\n *         new Graphics().beginFill(0x000000).drawRect(0, 0, 200, 50),\n *     ],\n * });\n */\n\nexport class ScrollBox extends Container\n{\n    protected background: Graphics | Sprite;\n    protected borderMask: Graphics;\n    protected lastWidth: number;\n    protected lastHeight: number;\n    protected __width = 0;\n    protected __height = 0;\n\n    protected readonly onMouseScrollBinded: (event: any) => void;\n\n    protected list: List;\n\n    protected readonly freeSlot = {\n        x: 0,\n        y: 0,\n    };\n\n    protected _trackpad: Trackpad;\n    protected isDragging = 0;\n    protected interactiveStorage: Map<number, DisplayObject> = new Map();\n    protected ticker = Ticker.shared;\n    protected options: ScrollBoxOptions;\n\n    constructor(options?: ScrollBoxOptions)\n    {\n        super();\n\n        if (options)\n        {\n            this.init(options);\n        }\n\n        this.ticker.add(this.update, this);\n\n        this.onMouseScrollBinded = this.onMouseScroll.bind(this);\n    }\n\n    /**\n     * Initiates ScrollBox.\n     * @param options\n     */\n    init(options: ScrollBoxOptions)\n    {\n        this.options = options;\n        this.setBackground(options.background);\n\n        this.__width = options.width | this.background.width;\n        this.__height = options.height | this.background.height;\n\n        options.vertPadding = options.vertPadding ?? options.padding ?? 0;\n        options.horPadding = options.horPadding ?? options.padding ?? 0;\n\n        if (!this.list)\n        {\n            this.list = new List();\n\n            super.addChild(this.list);\n        }\n\n        this.list.init({\n            type: options.type,\n            elementsMargin: options.elementsMargin,\n            vertPadding: options.vertPadding,\n            horPadding: options.horPadding,\n        });\n\n        this.addItems(options.items);\n\n        if (this.hasBounds)\n        {\n            this.addMask();\n            this.makeScrollable();\n        }\n\n        this._trackpad.xAxis.value = 0;\n        this._trackpad.yAxis.value = 0;\n\n        this.resize();\n    }\n\n    protected get hasBounds(): boolean\n    {\n        return !!this.__width || !!this.__height;\n    }\n\n    protected override onChildrenChange()\n    {\n        // do nothing we manage this in addItem\n    }\n\n    /**\n     * Add an items to a scrollable list.\n     * @param {...any} items\n     */\n    addItems(items: Container[])\n    {\n        if (!items?.length) return;\n\n        items.forEach((item) => this.addItem(item));\n    }\n\n    /** Remove all items from a scrollable list. */\n    removeItems()\n    {\n        this.list.removeChildren();\n    }\n\n    /**\n     * Adds an item to a scrollable list.\n     * @param {...any} items\n     */\n    addItem<T extends Container[]>(...items: T): T[0]\n    {\n        if (items.length > 1)\n        {\n            items.forEach((item) => this.addItem(item));\n        }\n        else\n        {\n            const child = items[0];\n\n            if (!child.width || !child.height)\n            {\n                console.error('ScrollBox item should have size');\n            }\n\n            child.x = this.freeSlot.x;\n            child.y = this.freeSlot.y;\n\n            this.list.addChild(child);\n\n            if (!this.options.disableDynamicRendering)\n            {\n                child.renderable = this.isItemVisible(child);\n            }\n\n            const elementsMargin = this.options?.elementsMargin ?? 0;\n\n            switch (this.options.type)\n            {\n                case 'horizontal':\n                    this.freeSlot.x += elementsMargin + child.width;\n                    break;\n\n                default:\n                    this.freeSlot.y += elementsMargin + child.height;\n                    break;\n            }\n        }\n\n        this.resize();\n\n        return items[0];\n    }\n\n    /**\n     * Removes an item from a scrollable list.\n     * @param itemID\n     */\n    removeItem(itemID: number)\n    {\n        const child = this.list.children[itemID];\n\n        if (!child)\n        {\n            return;\n        }\n\n        this.list.removeChild(child);\n\n        this.resize();\n    }\n\n    /**\n     * Checks if the item is visible or scrolled out of the visible part of the view.* Adds an item to a scrollable list.\n     * @param item\n     */\n    isItemVisible(item: Container): boolean\n    {\n        const isVertical = this.options.type === 'vertical' || !this.options.type;\n        let isVisible = false;\n        const list = this.list;\n\n        if (isVertical)\n        {\n            const posY = item.y + list.y;\n\n            if (\n                posY + item.height + this.options.vertPadding >= 0\n                && posY - this.options.vertPadding - this.options.elementsMargin <= this.options.height\n            )\n            {\n                isVisible = true;\n            }\n        }\n        else\n        {\n            const posX = item.x + list.x;\n\n            if (posX + item.width >= 0 && posX <= this.options.width)\n            {\n                isVisible = true;\n            }\n        }\n\n        return isVisible;\n    }\n\n    /** Returns all inner items in a list. */\n    get items(): Container[] | []\n    {\n        return this.list?.children ?? [];\n    }\n\n    /**\n     * Set ScrollBox background.\n     * @param {number | string} background - background color or texture.\n     */\n    setBackground(background?: number | string)\n    {\n        if (this.background)\n        {\n            this.removeChild(this.background);\n            if (this.background instanceof Sprite)\n            {\n                this.background.destroy();\n            }\n        }\n\n        this.options.background = background;\n\n        this.background = (background !== undefined && typeof background === 'string')\n            ? Sprite.from(background)\n            : new Graphics();\n\n        this.addChildAt(this.background, 0);\n\n        this.resize();\n    }\n\n    protected addMask()\n    {\n        if (!this.borderMask)\n        {\n            this.borderMask = new Graphics();\n            super.addChild(this.borderMask);\n            this.mask = this.borderMask;\n        }\n\n        this.resize();\n    }\n\n    protected makeScrollable()\n    {\n        if (!this._trackpad)\n        {\n            this._trackpad = new Trackpad({\n                constrain: true,\n                yEase: new ScrollSpring(),\n            });\n        }\n\n        this.on('pointerdown', (e: FederatedPointerEvent) =>\n        {\n            this.isDragging = 1;\n            this._trackpad.pointerDown(e.global);\n        });\n\n        this.on('pointerup', () =>\n        {\n            this.isDragging = 0;\n            this._trackpad.pointerUp();\n            this.restoreInteractivity();\n        });\n\n        this.on('pointerupoutside', () =>\n        {\n            this.isDragging = 0;\n            this._trackpad.pointerUp();\n            this.restoreInteractivity();\n        });\n\n        this.on('globalpointermove', (e: FederatedPointerEvent) =>\n        {\n            this._trackpad.pointerMove(e.global);\n\n            if (!this.isDragging) return;\n\n            if (this.interactiveStorage.size === 0)\n            {\n                this.disableInteractivity(this.items);\n            }\n        });\n\n        const { onMouseHover, onMouseOut } = this;\n\n        this.on('mouseover', onMouseHover, this).on('mouseout', onMouseOut, this);\n    }\n\n    // prevent interactivity on all children\n    protected disableInteractivity(items: DisplayObject[])\n    {\n        items.forEach((item, id) =>\n        {\n            this.emitPointerOpOutside(item);\n\n            if (item.interactive)\n            {\n                this.interactiveStorage.set(id, item);\n                item.eventMode = 'auto';\n                item.interactiveChildren = false;\n            }\n        });\n    }\n\n    protected emitPointerOpOutside(item: DisplayObject)\n    {\n        if (item.eventMode !== 'auto')\n        {\n            item.emit('pointerupoutside', null);\n        }\n\n        if (item instanceof Container && item.children)\n        {\n            item.children.forEach((child) => this.emitPointerOpOutside(child));\n        }\n    }\n\n    // restore interactivity on all children that had it\n    protected restoreInteractivity()\n    {\n        this.interactiveStorage.forEach((item, itemID) =>\n        {\n            item.eventMode = 'static';\n            item.interactiveChildren = false;\n            this.interactiveStorage.delete(itemID);\n        });\n    }\n\n    protected setInteractive(interactive: boolean)\n    {\n        this.eventMode = interactive ? 'static' : 'auto';\n    }\n\n    protected get listHeight(): number\n    {\n        return this.list.height + (this.options.vertPadding * 2);\n    }\n\n    protected get listWidth(): number\n    {\n        return this.list.width + (this.options.horPadding * 2);\n    }\n\n    /** Controls item positions and visibility. */\n    resize(): void\n    {\n        if (!this.hasBounds) return;\n\n        this.renderAllItems();\n\n        if (\n            this.borderMask\n            && (this.lastWidth !== this.listWidth\n                || this.lastHeight !== this.listHeight)\n        )\n        {\n            const verPadding = this.options.vertPadding;\n            const horPadding = this.options.horPadding;\n\n            if (!this.options.width)\n            {\n                this.__width += this.listWidth;\n            }\n\n            if (!this.options.height)\n            {\n                this.__height += this.listHeight;\n            }\n\n            this.borderMask\n                .clear()\n                .lineStyle(0)\n                .beginFill(0xffffff)\n                .drawRoundedRect(\n                    0,\n                    0,\n                    this.__width,\n                    this.__height,\n                    this.options.radius | 0,\n                );\n            this.borderMask.eventMode = 'none';\n\n            if (this.background instanceof Graphics)\n            {\n                this.background.clear().lineStyle(0);\n\n                const color = this.options.background;\n\n                this.background.beginFill(\n                    color ?? 0x000000,\n                    color ? 1 : 0.0000001, // if color is not set, set alpha to 0 to be able to drag by click on bg\n                );\n\n                this.background.drawRect(\n                    0,\n                    0,\n                    this.__width + horPadding,\n                    this.__height + verPadding,\n                );\n            }\n\n            if (this.options.type === 'horizontal')\n            {\n                this.setInteractive(this.listWidth > this.__width);\n            }\n            else\n            {\n                this.setInteractive(this.listHeight > this.__height);\n            }\n\n            this.lastWidth = this.listWidth;\n            this.lastHeight = this.listHeight;\n        }\n\n        if (this._trackpad)\n        {\n            const maxWidth\n                = this.borderMask.width\n                - this.list.width\n                - (this.options.horPadding * 2);\n\n            const maxHeight\n                = this.borderMask.height\n                - this.list.height\n                - (this.options.vertPadding * 2);\n\n            if (this.options.type === 'vertical')\n            {\n                this._trackpad.yAxis.max = -Math.abs(maxHeight);\n            }\n            else if (this.options.type === 'horizontal')\n            {\n                this._trackpad.xAxis.max = -Math.abs(maxWidth);\n            }\n            else\n            {\n                this._trackpad.yAxis.max = -Math.abs(maxHeight);\n                this._trackpad.xAxis.max = -Math.abs(maxWidth);\n            }\n        }\n\n        this.stopRenderHiddenItems();\n    }\n\n    protected onMouseHover()\n    {\n        this.renderAllItems();\n\n        document.addEventListener('mousewheel', this.onMouseScrollBinded);\n        document.addEventListener('DOMMouseScroll', this.onMouseScrollBinded);\n    }\n\n    protected onMouseOut()\n    {\n        this.stopRenderHiddenItems();\n\n        document.removeEventListener('mousewheel', this.onMouseScrollBinded);\n        document.removeEventListener(\n            'DOMMouseScroll',\n            this.onMouseScrollBinded,\n        );\n    }\n\n    protected onMouseScroll(event: any): void\n    {\n        this.renderAllItems();\n\n        if (\n            this.options.type === 'horizontal'\n            && (typeof event.deltaX !== 'undefined'\n                || typeof event.deltaY !== 'undefined')\n        )\n        {\n            const targetPos = event.deltaY\n                ? this.list.x - event.deltaY\n                : this.list.x - event.deltaX;\n\n            if (\n                targetPos < 0\n                && targetPos + this.listWidth + this.options.horPadding\n                    < this.__width\n            )\n            {\n                this._trackpad.xAxis.value = this.__width - this.listWidth;\n            }\n            else if (targetPos > this.options.horPadding)\n            {\n                this._trackpad.xAxis.value = 0;\n            }\n            else\n            {\n                this._trackpad.xAxis.value = targetPos;\n            }\n        }\n        else if (typeof event.deltaY !== 'undefined')\n        {\n            const targetPos = this.list.y - event.deltaY;\n\n            if (\n                targetPos < 0\n                && targetPos + this.listHeight + this.options.vertPadding\n                    < this.__height\n            )\n            {\n                this._trackpad.yAxis.value = this.__height - this.listHeight;\n            }\n            else if (targetPos > this.options.vertPadding)\n            {\n                this._trackpad.yAxis.value = 0;\n            }\n            else\n            {\n                this._trackpad.yAxis.value = targetPos;\n            }\n        }\n\n        this.stopRenderHiddenItems();\n    }\n\n    /** Makes it scroll down to the last element. */\n    scrollBottom()\n    {\n        if (!this.interactive)\n        {\n            this.scrollTop();\n        }\n        else\n        {\n            this.scrollTo(this.list.children.length - 1);\n        }\n    }\n\n    /** Makes it scroll up to the first element. */\n    scrollTop()\n    {\n        this._trackpad.xAxis.value = 0;\n        this._trackpad.yAxis.value = 0;\n    }\n\n    protected renderAllItems()\n    {\n        if (this.options.disableDynamicRendering)\n        {\n            return;\n        }\n\n        this.items.forEach((child) =>\n        {\n            child.renderable = true;\n        });\n    }\n\n    protected stopRenderHiddenItems()\n    {\n        if (this.options.disableDynamicRendering)\n        {\n            return;\n        }\n\n        this.items.forEach((child) =>\n        {\n            child.renderable = this.isItemVisible(child);\n        });\n    }\n\n    /**\n     * Scrolls to the element with the given ID.\n     * @param elementID\n     */\n    scrollTo(elementID: number)\n    {\n        if (!this.interactive)\n        {\n            return;\n        }\n\n        const target = this.list.children[elementID];\n\n        if (!target)\n        {\n            return;\n        }\n\n        this._trackpad.xAxis.value\n            = this.options.type === 'horizontal'\n                ? this.__width\n                  - target.x\n                  - target.width\n                  - this.options.horPadding\n                : 0;\n\n        this._trackpad.yAxis.value\n            = !this.options.type || this.options.type === 'vertical'\n                ? this.__height\n                  - target.y\n                  - target.height\n                  - this.options.vertPadding\n                : 0;\n    }\n\n    /** Gets component height. */\n    override get height(): number\n    {\n        return this.__height;\n    }\n\n    /** Gets component width. */\n    override get width(): number\n    {\n        return this.__width;\n    }\n\n    protected update()\n    {\n        if (!this.list) return;\n\n        this._trackpad.update();\n\n        if (this.options.type === 'horizontal')\n        {\n            if (this.list.x !== this._trackpad.x)\n            {\n                this.renderAllItems();\n                this.list.x = this._trackpad.x;\n            }\n            else\n            {\n                this.stopRenderHiddenItems();\n            }\n        }\n        else\n        if (this.list.y !== this._trackpad.y)\n        {\n            this.renderAllItems();\n            this.list.y = this._trackpad.y;\n        }\n        else\n        {\n            this.stopRenderHiddenItems();\n        }\n    }\n\n    /** Destroys the component. */\n    override destroy()\n    {\n        this.ticker.remove(this.update, this);\n\n        this.background.destroy();\n        this.list.destroy();\n\n        super.destroy();\n    }\n}\n"],"names":["Container","Ticker","List","Sprite","Graphics","Trackpad","ScrollSpring"],"mappings":"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"}